{
    // アイコンテーマ
    "workbench.iconTheme": "material-icon-theme",
    // タブサイズ
    "editor.tabSize": 2,
    // defaultのformatter
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    // prettier:シングルクォートをdefaultにする
    "prettier.singleQuote": true,
    // ファイル保存時にESLintでフォーマット
    "editor.codeActionsOnSave": {
        "source.fixAll.eslint": true
    },
    // fonts
    // "scm.inputFontFamily": "Consolas, 'Courier New', monospace",
    "editor.fontFamily": "'Hack NF', Consolas, 'Courier New', monospace",
    // "editor.inlayHints.fontFamily": "Consolas, 'Courier New', monospace",
    // "markdown.preview.fontFamily": "Consolas, 'Courier New', monospace",
    // "debug.console.fontFamily": "Consolas, 'Courier New', monospace",
    // "rest-client.fontFamily": "Consolas, 'Courier New', monospace",
    // "editor.codeLensFontFamily": "Consolas, 'Courier New', monospace",
    // 入力中に候補を自動的に表示するかどうかを制御します。
    "editor.quickSuggestions": {
        "other": "on",
        "comments": "off",
        "strings": "off"
    },
    // クイック候補が表示されるまでのミリ秒を制御します。
    "editor.quickSuggestionsDelay": 1,
    // これをfalseにするとkeywordだけ消してくれる
    "editor.suggest.showKeywords": false,
    // textもいらないので消す
    "editor.suggest.showWords": false,
    // タブステップ中も入力補完を有効にする
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    // 候補リストを表示するときに候補を事前に選択する方法を制御します。
    "editor.suggestSelection": "recentlyUsedByPrefix",
    // ファイル保存時に各行の末尾にある半角スペースを削除
    "files.trimTrailingWhitespace": true,
    // ブレイクポイントのスペースを削除
    "editor.glyphMargin": false,
    // ミニマップを削除
    "editor.minimap.enabled": false,
    // 大きすぎるUIを小さくする。
    // "window.zoomLevel": -1,
    // font-sizeをあげてる。
    "editor.fontSize": 15,
    // "terminal.integrated.fontSize": 20,
    // "debug.console.fontSize": 20,
    // codeコマンドでファイルを開いたとき、既に開いているウインドウがあればそこに表示する。
    "window.openFilesInNewWindow": "off",
    // タブの名前の長さに応じてタブの幅が変更される
    "workbench.editor.tabSizing": "shrink",
    // 文字の間隔を狭める
    "editor.letterSpacing": -0.2,
    "editor.lineHeight": 21,
    // プレビューモードで開かれるのを阻止します
    "workbench.editor.enablePreview": false,
    "workbench.editor.enablePreviewFromQuickOpen": false,
    // 開始と終了のブラケットをセットで同じカラーにします。
    "editor.bracketPairColorization.enabled": true,
    // 開始と終了のブラケットが強調表示されます。
    "editor.guides.bracketPairs": true,
    // vscodeを立ち上げた時に表示される画面を変更します。
    "workbench.startupEditor": "none",
    // テキストコピー時に書式設定を含める
    "editor.copyWithSyntaxHighlighting": false,
    // importが入力補完される
    "javascript.suggest.autoImports": true,
    "typescript.suggest.autoImports": true,
    // ファイルを移動した時にimportのパスが変わっても自動で更新される
    "javascript.updateImportsOnFileMove.enabled": "always",
    "typescript.updateImportsOnFileMove.enabled": "always",
    // コンソールなどの画面を右側に配置します
    "workbench.panel.defaultLocation": "right",
    // 引数の名前が表示されます。
    "javascript.inlayHints.parameterNames.enabled": "all",
    "typescript.inlayHints.parameterNames.enabled": "all",
    // vscode の window 上部の名前を変更します
    "window.title": "${dirty}\\${activeEditorMedium}${separator}${rootName}",
    // ファイルツリーにインデントのガイド線を表示する
    "workbench.tree.renderIndentGuides": "always",
    // ファイルツリーにインデントのサイズを変更する
    "workbench.tree.indent": 16,
    // 設定すると、OS の外観に基づいて好みのカラー テーマに自動的に切り替わります。
    "window.autoDetectColorScheme": true,
    // #window.autoDetectColorScheme# が有効な場合に、ダークな OS の外観に適した色のテーマを指定します。
    "workbench.preferredDarkColorTheme": "GitHub Dark Default",
    // vscode のテーマを変更します。
    "workbench.colorTheme": "GitHub Dark Default",
    // ターミナルで選択するとコピー、右クリックで貼り付け出来るようにする
    "terminal.integrated.copyOnSelection": true,
    "terminal.integrated.rightClickBehavior": "paste",
    // git リポジトリを同期する前に確認しないようにする。
    "git.confirmSync": false,
    // vscodeのカーソルを変更する
    "editor.cursorStyle": "block",
    "workbench.colorCustomizations": {
        "editorCursor.foreground": "#f858f07f",
        "terminalCursor.foreground": "#f858f07f"
    },
    "editor.cursorBlinking": "expand",
    // カーソルがにゅるっと移動する
    "editor.cursorSmoothCaretAnimation": true,
    // 制御文字を表示する
    "editor.renderControlCharacters": true,
    // 選択行の行番号をハイライトする
    "editor.renderLineHighlight": "all",
    // ファイルの自動エンコードを実施
    "files.autoGuessEncoding": true,
    // デバッグ中に行内に変数値を表示
    "debug.inlineValues": "on",
    // デバッグコンソールの表示方法
    "debug.internalConsoleOptions": "openOnSessionStart",
    // デバッグビューの表示方法
    "debug.openDebug": "openOnSessionStart",
    // ドラッグアンドドロップで選択範囲のテキストを移動できるようにする
    "editor.dragAndDrop": false,
    // 貼り付けを行ったときに自動でフォーマット
    "editor.formatOnPaste": true,
    // ファイル保存時に自動でフォーマット
    "editor.formatOnSave": true,
    // 入力した行を自動でフォーマット
    "editor.formatOnType": true,
    // リンクされた編集がエディターで有効にされるかどうかを制御します。e.g. HTML
    "editor.linkedEditing": true,
    // 行の折りたたみ記号の表示方法
    "editor.showFoldingControls": "always",
    // 単語の区切り文字
    "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?　、。！？「」【】『』（）",
    // 行の折り返し表示
    "editor.wordWrap": "on",
    // 名前重複時の名前付け規則
    "explorer.incrementalNaming": "smart",
    // ファイル保存時に最終行に改行を挿入
    "files.insertFinalNewline": true,
    // ファイル保存時に最終行以降の空行を削除
    "files.trimFinalNewlines": true,
    // 検索ビューの検索結果に行数を併記
    "search.showLineNumbers": true,
    // アクティブなターミナルセッションがある場合、終了時に確認を行う
    "terminal.integrated.confirmOnExit": "always",
    // 信頼されたワークスペースで信頼されていないファイルを開くときの取り扱いを制御します
    "security.workspace.trust.untrustedFiles": "open",
    // 使用可能なスペースを超えたときにタブを複数行に折り返す
    "workbench.editor.wrapTabs": true,
    // 拡張機能の推奨事項の通知を表示しません
    "extensions.ignoreRecommendations": true,
    "git.suggestSmartCommit": false,
    // Ctrl キーを押しながらマウス ホイールを使用してエディターのフォントをズームします
    "editor.mouseWheelZoom": true,
    // 水平方向のブラケット ペアのガイドを有効にする
    "editor.guides.bracketPairsHorizontal": true,
    // エディターにインライン候補を自動的に表示する
    "editor.inlineSuggest.enabled": true,
    "editor.unicodeHighlight.ambiguousCharacters": false,
    // commits will automatically be fetched from the default remote of the current Git repository.
    "git.autofetch": true,
    "window.restoreWindows": "none",
    "[markdown]": {
        "editor.defaultFormatter": "DavidAnson.vscode-markdownlint"
    },
    // 基本 ASCII 以外のすべての文字を強調表示するかどうかを制御します。
    "editor.unicodeHighlight.nonBasicASCII": false,
    // 空白を占めるだけの文字や幅がまったくない文字を強調表示するかどうかを制御します。
    "editor.unicodeHighlight.invisibleCharacters": false,
    "prettier.tabWidth": 4,
    "emmet.syntaxProfiles": {
        "html": {
            "filters": "html,c"
        }
    },
    "[sql]": {
        "editor.defaultFormatter": "inferrinizzard.prettier-sql-vscode"
    },
    "[java]": {
        "editor.tabSize": 4,
        "editor.glyphMargin": true,
        "editor.defaultFormatter": "redhat.java"
    },
    "java.jdt.ls.java.home": "C:\\Program Files\\Eclipse Adoptium\\jdk-17.0.5.8-hotspot",
    "java.saveActions.organizeImports": true,
    "java.dependency.packagePresentation": "hierarchical",
    "java.dependency.syncWithFolderExplorer": true,
    "java.configuration.updateBuildConfiguration": "automatic"
}

// https://zenn.dev/ruru/articles/396265425c9740
// https://zenn.dev/hulk510/articles/vscode-suggest-more-useful
// https://www.cview.co.jp/cvcblog/2021.04.20.dYMmFSxAihNBwoEkCys_X
// https://www.kurusugawa.jp/20210512-vscode-wide-area/
// https://qiita.com/papi_tokei/items/c639dc7d1e0f5ad68a74
