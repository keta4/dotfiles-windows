{
    "blockman.n32BlackListOfFileFormats": "plaintext, log, markdown, sql",
    "boot-java.rewrite.reconcile": true,
    "cSpell.userWords": [
        "Adoptium",
        "AHCI",
        "Alacritty",
        "ALCPU",
        "alefragnani",
        "Anson",
        "anycode",
        "appuser",
        "ASGI",
        "autoclean",
        "autoconfigure",
        "autodocstring",
        "autofetch",
        "autoremove",
        "autostash",
        "azuretools",
        "Baccano",
        "Backreferences",
        "bbwe",
        "Bitwarden",
        "broot",
        "bungcip",
        "CEINTL",
        "cellpromote",
        "charliermarsh",
        "cheatsheet",
        "chezmoi",
        "chsh",
        "Cica",
        "clippy",
        "Codegeex",
        "codezombiech",
        "conda",
        "Consolas",
        "containerd",
        "CPUID",
        "createsuperuser",
        "csview",
        "dbaeumer",
        "ddof",
        "dearmor",
        "debloat",
        "denoland",
        "devcontainer",
        "dhruv",
        "Dieu",
        "Digi",
        "djangopj",
        "Dobbeleer",
        "donjayamanne",
        "dotfiles",
        "dpkg",
        "Duong",
        "eamodio",
        "errorclass",
        "errorlens",
        "esbenp",
        "Expt",
        "fastcomplete",
        "fizzbuzz",
        "flac",
        "fndgsc",
        "formulahendry",
        "fwcd",
        "geekuninstaller",
        "genact",
        "gerardog",
        "Giorgiotani",
        "githistory",
        "gitui",
        "grex",
        "Gruntfuggly",
        "gsudo",
        "hexeditor",
        "HKCU",
        "hluk",
        "hotspot",
        "Howie",
        "inferrinizzard",
        "initializr",
        "Inkscape",
        "innounp",
        "Intelli",
        "intellicode",
        "ipynb",
        "isort",
        "janisdd",
        "JIDEA",
        "jorgebucaran",
        "jovyan",
        "jpholiday",
        "juhahinkula",
        "jupyterlab",
        "Kdenlive",
        "keta",
        "keymap",
        "keyrings",
        "Kodi",
        "kohler",
        "Kyokasho",
        "Levitsky",
        "linuxbrew",
        "Listview",
        "lorenzopirro",
        "losslesscut",
        "matplotlib",
        "mechatroner",
        "Meltytech",
        "mrmlnc",
        "mypy",
        "nemi",
        "neovim",
        "newgrp",
        "njpwerner",
        "NOPASSWD",
        "NORESTART",
        "notlike",
        "oderwat",
        "pagedown",
        "pageup",
        "Pawlowski",
        "Peazip",
        "Phap",
        "Pico",
        "procps",
        "procs",
        "profitrobots",
        "psordum",
        "pval",
        "pwsh",
        "pyenv",
        "pylance",
        "pyplot",
        "pyproject",
        "pysen",
        "pytest",
        "Redist",
        "reshim",
        "rhkp",
        "ripgrep",
        "ritwickdey",
        "rsyslog",
        "runc",
        "runserver",
        "rustfmt",
        "SATA",
        "satackey",
        "scipy",
        "scoopfile",
        "sdras",
        "serayuzgur",
        "shardulm",
        "shellenv",
        "Shotcut",
        "sibvic",
        "signinoptions",
        "skyapps",
        "sophi",
        "sophiapp",
        "springframework",
        "systempropertiesadvanced",
        "tabnine",
        "tamasfe",
        "tclock",
        "Temurin",
        "thymeleaf",
        "tokei",
        "tomoki",
        "toolsai",
        "topgrade",
        "twinkletray",
        "underride",
        "uninstallation",
        "userlist",
        "usermod",
        "usernamehw",
        "USERPROFILE",
        "uvfrbwh",
        "vadimcn",
        "venv",
        "VERYSILENT",
        "virtualenvs",
        "voidtools",
        "vscjava",
        "vscodeintellicode",
        "wayou",
        "wekyb",
        "winget",
        "wingetfile",
        "wmaurer",
        "xabikos",
        "xanderfrangos",
        "XBMC",
        "xlabel",
        "ylabel",
        "zoxide",
        "zstd"
    ],
    // デバッグ コンソールのフォント ファミリを制御します。
    "debug.console.fontFamily": "Consolas, 'Courier New', monospace",
    // デバッグ中に行内に変数値を表示
    "debug.inlineValues": "on",
    // デバッグコンソールの表示方法
    "debug.internalConsoleOptions": "openOnSessionStart",
    // デバッグビューの表示方法
    "debug.openDebug": "openOnSessionStart",
    // 開始と終了のブラケットをセットで同じカラーにします。
    "editor.bracketPairColorization.enabled": true,
    // ファイル保存時にESLintでフォーマット
    "editor.codeActionsOnSave": {
        "source.fixAll.eslint": true,
        "source.organizeImports": true
    },
    // CodeLens のフォント ファミリを制御します。
    "editor.codeLensFontFamily": "Consolas, 'Courier New', monospace",
    // テキストコピー時に書式設定を含める
    "editor.copyWithSyntaxHighlighting": false,
    // カーソルのアニメーション方式を制御します。
    "editor.cursorBlinking": "expand",
    // カーソルがにゅるっと移動する
    "editor.cursorSmoothCaretAnimation": "on",
    // vscodeのカーソルを変更する
    "editor.cursorStyle": "block",
    // ドラッグアンドドロップで選択範囲のテキストを移動できるようにする
    "editor.dragAndDrop": false,
    // 選択範囲を指定しないでコピーする場合に現在の行をコピーするかどうかを制御します。
    "editor.emptySelectionClipboard": false,
    // フォント ファミリを制御します。
    "editor.fontFamily": "'Hack NF', Consolas, 'BIZ UDゴシック', 'モトヤLマルベリ3等幅', Cica, 'Courier New', monospace",
    // font-sizeをあげてる。
    "editor.fontSize": 14,
    // 貼り付けを行ったときに自動でフォーマット
    "editor.formatOnPaste": true,
    // ファイル保存時に自動でフォーマット
    "editor.formatOnSave": true,
    // 入力した行を自動でフォーマット
    "editor.formatOnType": true,
    // 開始と終了のブラケットが強調表示されます。
    "editor.guides.bracketPairs": false,
    // 水平方向のブラケット ペアのガイドを有効にする
    "editor.guides.bracketPairsHorizontal": true,
    // エディターで解説ヒントのフォント ファミリを制御します。
    "editor.inlayHints.fontFamily": "'Hack NF', Consolas, 'BIZ UDゴシック', 'モトヤLマルベリ3等幅', Cica, 'Courier New', monospace",
    // エディターにインライン候補を自動的に表示する
    "editor.inlineSuggest.enabled": true,
    // 文字の間隔を狭める
    "editor.letterSpacing": -0.4,
    "editor.lineHeight": 21,
    // リンクされた編集がエディターで有効にされるかどうかを制御します。e.g. HTML
    "editor.linkedEditing": true,
    // ミニマップを削除
    "editor.minimap.enabled": false,
    // Ctrl キーを押しながらマウス ホイールを使用してエディターのフォントをズームします
    "editor.mouseWheelZoom": true,
    // 入力中に候補を自動的に表示するかどうかを制御します。
    "editor.quickSuggestions": {
        "comments": "off",
        "other": "on",
        "strings": "off"
    },
    // クイック候補が表示されるまでのミリ秒を制御します。
    "editor.quickSuggestionsDelay": 1,
    // 制御文字を表示する
    "editor.renderControlCharacters": true,
    // 選択行の行番号をハイライトする
    "editor.renderLineHighlight": "all",
    // 選択範囲の角を丸くするかどうかを制御します。
    "editor.roundedSelection": false,
    // 行の折りたたみ記号の表示方法
    "editor.showFoldingControls": "always",
    // snippetのサジェストを最初に出す。
    "editor.snippetSuggestions": "top",
    // これをfalseにするとkeywordだけ消してくれる
    // "editor.suggest.showKeywords": false,
    // textもいらないので消す
    "editor.suggest.showWords": false,
    // タブステップ中も入力補完を有効にする
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    // 候補リストを表示するときに候補を事前に選択する方法を制御します。
    "editor.suggestSelection": "recentlyUsedByPrefix",
    // タブサイズ
    "editor.tabSize": 2,
    // 現在のユーザー ロケールで一般的な文字を除き、基本的な ASCII 文字と混同される可能性のある文字を強調表示するかどうかを制御します。
    "editor.unicodeHighlight.ambiguousCharacters": false,
    // 空白を占めるだけの文字や幅がまったくない文字を強調表示するかどうかを制御します。
    "editor.unicodeHighlight.invisibleCharacters": false,
    // 基本 ASCII 以外のすべての文字を強調表示するかどうかを制御します。
    "editor.unicodeHighlight.nonBasicASCII": false,
    // ドキュメント内の単語に基づいて入力候補を計算するかどうかを制御します。
    "editor.wordBasedSuggestions": false,
    // 単語の区切り文字
    "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?　、。！？「」【】『』（）にをはがのともへ",
    // 行の折り返し表示
    "editor.wordWrap": "off",
    // Enable Emmet abbreviations in languages that are not supported by default.
    "emmet.includeLanguages": {
        "javascript": "javascriptreact, css, html",
        "vue": "html, css, vue, vue-html"
    },
    // Define profile for specified syntax or use your own profile with specific rules.
    "emmet.syntaxProfiles": {
        "html": {
            "filters": "html,c"
        }
    },
    // Variables to be used in Emmet snippets.
    "emmet.variables": {
        "lang": "ja"
    },
    // 名前重複時の名前付け規則
    "explorer.incrementalNaming": "smart",
    // 拡張機能の推奨事項の通知を表示しません
    "extensions.ignoreRecommendations": true,
    // ファイルの自動エンコードを実施
    "files.autoGuessEncoding": true,
    // 改行コード
    "files.eol": "\n",
    // ファイル保存時に最終行に改行を挿入
    "files.insertFinalNewline": true,
    // ファイル保存時に最終行以降の空行を削除
    // "files.trimFinalNewlines": true,
    "files.trimFinalNewlines": false,
    // ファイル保存時に各行の末尾にある半角スペースを削除
    // "files.trimTrailingWhitespace": true,
    "files.trimTrailingWhitespace": false,
    // commits will automatically be fetched from the default remote of the current Git repository.
    "git.autofetch": true,
    // git リポジトリを同期する前に確認しないようにする。
    "git.confirmSync": false,
    // ブランチがプル時にリベースされた可能性があると思われる場合、警告を無視します。
    "git.ignoreRebaseWarning": true,
    // Suggests to enable smart commit (commit all changes when there are no staged changes).
    "git.suggestSmartCommit": false,
    "java.configuration.updateBuildConfiguration": "automatic",
    "java.dependency.packagePresentation": "hierarchical",
    "java.dependency.syncWithFolderExplorer": true,
    "java.format.settings.profile": "GoogleStyle",
    "java.format.settings.url": "${workspaceFolder}\\.vscode\\eclipse-java-google-style.xml",
    "java.jdt.ls.java.home": "C:\\Program Files\\Eclipse Adoptium\\jdk-17.0.5.8-hotspot",
    // VSCodeでJava開発する際のショートカットキー一覧
    "java.saveActions.organizeImports": true,
    // 引数の名前が表示されます。
    "javascript.inlayHints.parameterNames.enabled": "all",
    // importが入力補完される
    "javascript.suggest.autoImports": true,
    // ファイルを移動した時にimportのパスが変わっても自動で更新される
    "javascript.updateImportsOnFileMove.enabled": "always",
    // Controls the font family used in the Markdown preview.
    "markdown.preview.fontFamily": "Consolas, 'Courier New', monospace",
    "markdownlint.config": {
        "MD024": false,
        "MD033": {
            "allowed_elements": [
                "details",
                "summary"
            ]
        }
    },
    "powershell.promptToUpdatePowerShell": false,
    // prettier:シングルクォートをdefaultにする
    "prettier.singleQuote": true,
    // Number of spaces it should use per tab
    "prettier.tabWidth": 4,
    // Enable/disable inlay hints for function return types:
    "python.analysis.inlayHints.functionReturnTypes": true,
    // Enable/disable inlay hints for variable types:
    "python.analysis.inlayHints.variableTypes": true,
    // Enable usage data and errors to be sent to Red Hat servers. Read our privacy statement.
    "redhat.telemetry.enabled": false,
    "rest-client.fontFamily": "Consolas, 'Courier New', monospace",
    // 検索ビューの検索結果に行数を併記
    "search.showLineNumbers": true,
    // 信頼されたワークスペースで信頼されていないファイルを開くときの取り扱いを制御します
    "security.workspace.trust.untrustedFiles": "open",
    "sortJSON.contextMenu": {
        "sortJSON": true,
        "sortJSONAlphaNum": false,
        "sortJSONAlphaNumReverse": false,
        "sortJSONKeyLength": false,
        "sortJSONKeyLengthReverse": false,
        "sortJSONReverse": false,
        "sortJSONType": false,
        "sortJSONTypeReverse": false,
        "sortJSONValues": false,
        "sortJSONValuesReverse": false
    },
    // Settings to underride the sort order (i.e. to be at the end of the order)
    "sortJSON.orderUnderride": [
        "[html]",
        "[java]",
        "[json]",
        "[jsonc]",
        "[markdown]",
        "[powershell]",
        "[python]",
        "[sql]"
    ],
    // ターミナルで選択するとコピー、右クリックで貼り付け出来るようにする
    "terminal.integrated.copyOnSelection": true,
    // 右クリックに対するターミナルの反応を制御します。
    "terminal.integrated.rightClickBehavior": "paste",
    // Enable/disable inlay hints for parameter names:
    "typescript.inlayHints.parameterNames.enabled": "all",
    // Enable/disable automatic updating of import paths when you rename or move a file in VS Code.
    "typescript.suggest.autoImports": true,
    // Enable/disable automatic updating of import paths when you rename or move a file in VS Code.
    "typescript.updateImportsOnFileMove.enabled": "always",
    // 設定すると、OS の外観に基づいて好みのカラー テーマに自動的に切り替わります。
    "window.autoDetectColorScheme": true,
    // "terminal.integrated.fontSize": 20,
    // "debug.console.fontSize": 20,
    // codeコマンドでファイルを開いたとき、既に開いているウインドウがあればそこに表示する。
    "window.openFilesInNewWindow": "off",
    // 初めての起動後にウィンドウを再度開く方法を制御します。この設定は、アプリケーションが既に実行中の場合は効果がありません。
    "window.restoreWindows": "none",
    // vscode の window 上部の名前を変更します
    "window.title": "${dirty}\\${activeEditorMedium}${separator}${rootName}",
    // 大きすぎるUIを小さくする。
    // "window.zoomLevel": -1,
    // 現在選択している配色テーマで配色を上書きします。
    "workbench.colorCustomizations": {
        "editorCursor.foreground": "#f858f07f",
        "terminalCursor.foreground": "#f858f07f",
        "editor.lineHighlightBackground": "#1073cf2d",
        "editor.lineHighlightBorder": "#9fced11f"
    },
    // vscode のテーマを変更します。
    "workbench.colorTheme": "GitHub Dark Default",
    // プレビューモードで開かれるのを阻止します
    "workbench.editor.enablePreview": false,
    // Quick Open から開いたエディターをプレビュー エディターとして表示するかどうかを制御します。
    "workbench.editor.enablePreviewFromQuickOpen": false,
    // タブの名前の長さに応じてタブの幅が変更される
    "workbench.editor.tabSizing": "shrink",
    // 使用可能なスペースを超えたときにタブを複数行に折り返す
    "workbench.editor.wrapTabs": true,
    // アイコンテーマ
    "workbench.iconTheme": "material-icon-theme",
    // コンソールなどの画面を右側に配置します
    "workbench.panel.defaultLocation": "right",
    // #window.autoDetectColorScheme# が有効な場合に、ダークな OS の外観に適した色のテーマを指定します。
    "workbench.preferredDarkColorTheme": "GitHub Dark Default",
    // 既定で使用する設定エディターを指定します。
    "workbench.settings.editor": "json",
    // vscodeを立ち上げた時に表示される画面を変更します。
    "workbench.startupEditor": "none",
    // ファイルツリーにインデントのガイド線を表示する
    "workbench.tree.renderIndentGuides": "always",
    "[html]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[java]": {
        "editor.defaultFormatter": "redhat.java",
        "editor.glyphMargin": true,
        "editor.tabSize": 4
    },
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features",
        "editor.tabSize": 4
    },
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features",
        "editor.tabSize": 4
    },
    "[markdown]": {
        "editor.defaultFormatter": "DavidAnson.vscode-markdownlint",
        "files.trimTrailingWhitespace": false
    },
    "[powershell]": {
        "editor.tabSize": 4,
        "files.eol": "\r\n"
    },
    "[python]": {
        "editor.tabSize": 4,
        "gitlens.codeLens.symbolScopes": [
            "!Module"
        ],
        "editor.codeActionsOnSave": {
            "source.fixAll": true
        },
        "editor.formatOnType": true
    },
    "[sql]": {
        "editor.defaultFormatter": "adpyke.vscode-sql-formatter"
    },
    "editor.inlayHints.enabled": "off",
    "diffEditor.wordWrap": "off",
    "editor.guides.indentation": false,
}
// https://zenn.dev/ruru/articles/396265425c9740
// https://zenn.dev/hulk510/articles/vscode-suggest-more-useful
// https://www.cview.co.jp/cvcblog/2021.04.20.dYMmFSxAihNBwoEkCys_X
// https://www.kurusugawa.jp/20210512-vscode-wide-area/
// https://qiita.com/papi_tokei/items/c639dc7d1e0f5ad68a74
// https://www.off-soft.net/ja/software/develop2/visual-studio-code-preuse-settings.html
